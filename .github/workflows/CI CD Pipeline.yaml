name: WeatherApp CI/CD

on:
  push:
    branches: [main]
    paths:
    - 'WeatherApp/**'
  pull_request:
    branches:
    - main
    paths:
    - 'WeatherApp/**'

jobs:
  static-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: pip install -r WeatherApp/app/requirements.txt
    - name: Lint with Flake8
      run: |
        pip install flake8
        flake8 WeatherApp/app/

  build:
    runs-on: ubuntu-latest
    needs: static-test
    steps:
    - uses: actions/checkout@v4
    - name: Build Docker Image
      run: docker build -t myweatherapp:${{ github.sha }} -f WeatherApp/deploy/Dockerfile .
    - name: Save Docker Image Tag to File
      run: echo "${{ github.sha }}" > image_tag.txt
    - name: Upload Image Tag and Helm Chart Files
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          image_tag.txt
          helm_charts_weatherapp/

  push-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v4
    - name: Download Build Files
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: ./downloaded_artifacts
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    - name: Tag and Push Docker Image
      run: |
        docker tag myweatherapp:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/myweatherapp:${{ github.sha }}
        docker push ${{ secrets.DOCKER_USERNAME }}/myweatherapp:${{ github.sha }}

  clean-up:
    runs-on: ubuntu-latest
    needs: push-image
    steps:
    - name: Clean up
      run: docker system prune -f

  deploy:
    runs-on: ubuntu-latest
    needs: clean-up
    steps:
    - name: Wait for a few seconds
      run: sleep 5
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
    - name: Pull Docker Image
      run: docker pull ${{ secrets.DOCKER_USERNAME }}/myweatherapp:${{ github.sha }}
    - name: Update Helm Chart and Deploy with ArgoCD
      run: |
        VERSION=${{ github.sha }}
        helm upgrade --install myweatherapp ./downloaded_artifacts/helm_charts_weatherapp --set image.tag=$VERSION
        argocd app sync myweatherapp --revision $VERSION
