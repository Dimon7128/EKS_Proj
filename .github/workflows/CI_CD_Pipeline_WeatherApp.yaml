name: WeatherApp CI/CD

on:
  push:
    branches: [main]
    paths:
    - 'WeatherApp/**'
  pull_request:
    branches:
    - main
    paths:
    - 'WeatherApp/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set environment variables
      run: |
        echo "KEY_API=${{ secrets.KEY_API }}" >> $GITHUB_ENV
        echo "BG_COLOR=${{ secrets.BG_COLOR }}" >> $GITHUB_ENV

    - name: Write environment variables to .env file
      run: |
        echo "KEY_API=${{ secrets.KEY_API }}" >> .env
        echo "BG_COLOR=${{ secrets.BG_COLOR }}" >> .env

    - name: Print working directory
      run: pwd

    - name: Ensure .env file exists
      run: ls -la

    - name: Set up Python 3.8
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'

    - name: Upload .env file
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: |
          .env


  test:
    runs-on: ubuntu-latest
    needs: build

    services:
      selenium:
        image: selenium/standalone-chrome
        ports:
        - 4444:4444

    steps:
    - uses: actions/checkout@v4

    - name: Download Build Files
      uses: actions/download-artifact@v4
      with:
        name: build-files
        path: ./downloaded_artifacts

    - name: Build Docker Image
      run: docker build -t myweatherapp:${{ github.sha }} -f WeatherApp/deploy/Dockerfile .

    - name: Run Docker container
      run: docker run -d -p 5000:5000 --name myweatherapp --env-file downloaded_artifacts/.env myweatherapp:${{ github.sha }}

    - name: Wait for the server to be ready
      run: |
        echo "Waiting for server to start..."
        for i in {1..3}; do
          if curl --silent --fail http://127.0.0.1:5000/; then
            echo "Server is up!"
            break
          fi
          echo "Waiting for server..."
          sleep 5
        done

    - name: Print Docker logs for debugging
      run: docker logs myweatherapp

    - name: Install Python Dependencies
      run: pip install pytest selenium webdriver-manager

    - name: Run Selenium tests
      run: xvfb-run --server-args="-screen 0 1920x1080x24" pytest WeatherApp/app/test/test_weather_app.py

    - name: Stop and remove Docker container
      run: |
        docker stop myweatherapp
        docker rm myweatherapp
